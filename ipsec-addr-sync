#!/usr/bin/env python

#
# Script, monitors an IPsec lease allocation, and updates the cyberprobe
# configuration file with the IP addresses.
#

import vici
import sys
import os
import time
import xml.dom.minidom
import socket

# Cyberprobe configuration file, hint: /etc/cyberprobe.cfg
if len(sys.argv) > 1:
    cyberprobe = sys.argv[1]
else:
    cyberprobe = "/etc/cyberprobe.cfg"

# VICI UNIX socket filename
if len(sys.argv) > 2:
    vsock = sys.argv[2]
else:
    vsock = "/var/run/charon.vici"

# Hack to resolve race condition with VPN startup
time.sleep(10)

while True:
    try:
        # Connect to VICI socket.
        sock = socket.socket(socket.AF_UNIX, socket.SOCK_STREAM)
        sock.connect(vsock)
        sess = vici.Session(sock)
        break
    except:
        # Retry on socket failure.
        time.sleep(1)

# Time of last update, forces immediate update.
old_ips = {'force':'update'}

# Loop forever.
while True:

    # Get time of last update
    try:

        ips = {}

        for v in sess.list_sas():
            dev = v['ikev2']['remote-id']
            ip = v['ikev2']['remote-vips'][0]

            sfx = ".device.local"
            if dev.endswith(sfx):
                dev = dev[:-len(sfx)]

            ips[ip] = dev

        if ips == old_ips:
            time.sleep(2)
            continue

        print "Update cyberprobe.cfg..."

        for v in ips:
            print v, ips[v]

        # XML parse cyberprobe file
        try:
            doc = xml.dom.minidom.parse(cyberprobe)
        except:
            continue

        # Get <targets> element.
        node = doc.documentElement.getElementsByTagName("targets")[0]

        # Delete children.
        while node.hasChildNodes():
            node.removeChild(node.firstChild)

        # Add newline after <targets>
        node.appendChild(doc.createTextNode("\n"))

        # Chomp through OpenVPN clients directory.
        for ip in ips:

            # Indent line
            node.appendChild(doc.createTextNode("    "))

            # Add <target ...> element
            targ = doc.createElement("target")
            targ.setAttribute("address", ip)
            targ.setAttribute("liid", ips[ip])
            targ.setAttribute("network", "vpn")
            node.appendChild(targ)
            node.appendChild(doc.createTextNode("\n"))

        # Re-indent the </targets> inline properly.
        node.appendChild(doc.createTextNode("  "))

        # Write XML back to config file.
        open(cyberprobe, "w").write(doc.toxml())

        old_ips = ips

    except Exception, e:
        print "Exception:",e
        time.sleep(5)

